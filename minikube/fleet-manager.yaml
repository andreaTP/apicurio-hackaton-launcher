# Fleet manager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet-manager
  labels:
    app: fleet-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleet-manager
  template:
    metadata:
      labels:
        app: fleet-manager
    spec:
      volumes:
      - name: fleet-manager-config
        secret:
          secretName: fleet-manager-config
      - name: local-nginx-proxy-vol
        configMap:
          name: local-nginx-proxy
          items:
          - key: nginx.conf
            path: nginx.conf
      containers:
      - name: fleet-manager
        image: 'quay.io/apicurio/apicurio-registry-fleet-manager:latest-snapshot'
        env:
          - name: USE_LOCAL_AMS
            value: 'true'
          - name: SERVICE_API_DATASOURCE_URL
            value: 'jdbc:postgresql://multitenant-sr-db-fleet:5432/multitenantsrdb'
          - name: SERVICE_API_DATASOURCE_USERNAME
            value: 'postgres'
          - name: SERVICE_API_DATASOURCE_PASSWORD
            value: 'postgres'
          - name: QUARKUS_FLYWAY_MIGRATE_AT_START
            value: 'true'
          - name: REGISTRY_QUOTA_PLANS_CONFIG_FILE
            value: '/mnt/config/quota-plans.yaml'
          - name: REGISTRY_DEPLOYMENTS_CONFIG_FILE
            value: '/mnt/config/registry-deployments.yaml'
          - name: AUTH_ENABLED
            value: 'true'
          # TODO configure this properly
          - name: REGISTRY_BROWSER_URL
            value: http://localhost:8081
          # TODO: use a self contained Keycloak
          - name: KEYCLOAK_URL
            value: 'http://localhost:8083'
          - name: KEYCLOAK_REALM
            value: 'operate-first-apicurio'
          - name: KEYCLOAK_API_CLIENT_ID
            value: 'sr-fleet-manager'
          - name: TENANT_MANAGER_AUTH_ENABLED
            value: 'true'
          - name: TENANT_MANAGER_AUTH_SERVER_URL
            value: 'http://localhost:8083'
          - name: TENANT_MANAGER_AUTH_SERVER_REALM
            value: 'operate-first-apicurio'
          - name: TENANT_MANAGER_AUTH_CLIENT_ID
            value: 'sr-tenant-manager'
          - name: ORGANIZATION_ID_CLAIM
            value: 'organization_id'
          - name: TENANT_MANAGER_AUTH_SECRET
            valueFrom:
              secretKeyRef:
                name: tenant-manager-client-secret
                key: secret
                optional: false
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: fleet-manager-config
          readOnly: true
          mountPath: "/mnt/config"
      - name: kc-reverse-proxy
        image: nginx
        ports:
        - containerPort: 8083
        volumeMounts:
        - name: local-nginx-proxy-vol
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
---
apiVersion: v1
kind: Secret
metadata:
  name: fleet-manager-config
data:
  quota-plans.yaml: cmVjb25jaWxlOiBmYWxzZQpwbGFuczoKICAtIG5hbWU6IGRlZmF1bHQKICAgIHJlc291cmNlczoKICAgICAgLSB0eXBlOiBNQVhfVE9UQUxfU0NIRU1BU19DT1VOVAogICAgICAgIGxpbWl0OiAxMDAwMAogICAgICAtIHR5cGU6IE1BWF9TQ0hFTUFfU0laRV9CWVRFUwogICAgICAgIGxpbWl0OiAxMDQ4NTc2ICMgMSBNYgogICAgICAtIHR5cGU6IE1BWF9BUlRJRkFDVFNfQ09VTlQKICAgICAgICBsaW1pdDogLTEKICAgICAgLSB0eXBlOiBNQVhfVkVSU0lPTlNfUEVSX0FSVElGQUNUX0NPVU5UCiAgICAgICAgbGltaXQ6IC0xCiAgICAgIC0gdHlwZTogTUFYX0FSVElGQUNUX1BST1BFUlRJRVNfQ09VTlQKICAgICAgICBsaW1pdDogNTAKICAgICAgLSB0eXBlOiBNQVhfUFJPUEVSVFlfS0VZX1NJWkVfQllURVMKICAgICAgICBsaW1pdDogMjU2CiAgICAgIC0gdHlwZTogTUFYX1BST1BFUlRZX1ZBTFVFX1NJWkVfQllURVMKICAgICAgICBsaW1pdDogMTAyNAogICAgICAtIHR5cGU6IE1BWF9BUlRJRkFDVF9MQUJFTFNfQ09VTlQKICAgICAgICBsaW1pdDogNTAKICAgICAgLSB0eXBlOiBNQVhfTEFCRUxfU0laRV9CWVRFUwogICAgICAgIGxpbWl0OiAyNTYKICAgICAgLSB0eXBlOiBNQVhfQVJUSUZBQ1RfTkFNRV9MRU5HVEhfQ0hBUlMKICAgICAgICBsaW1pdDogLTEKICAgICAgLSB0eXBlOiBNQVhfQVJUSUZBQ1RfREVTQ1JJUFRJT05fTEVOR1RIX0NIQVJTCiAgICAgICAgbGltaXQ6IC0xCiAgICAgIC0gdHlwZTogTUFYX1JFUVVFU1RTX1BFUl9TRUNPTkRfQ09VTlQKICAgICAgICBsaW1pdDogMTAKICAtIG5hbWU6IGFscGhhCiAgICByZXNvdXJjZXM6CiAgICAgIC0gdHlwZTogTUFYX1RPVEFMX1NDSEVNQVNfQ09VTlQKICAgICAgICBsaW1pdDogMTAwMDAwCiAgICAgIC0gdHlwZTogTUFYX1NDSEVNQV9TSVpFX0JZVEVTCiAgICAgICAgbGltaXQ6IDEwNDg1NzYgIyAxIE1iCiAgICAgIC0gdHlwZTogTUFYX0FSVElGQUNUU19DT1VOVAogICAgICAgIGxpbWl0OiAtMQogICAgICAtIHR5cGU6IE1BWF9WRVJTSU9OU19QRVJfQVJUSUZBQ1RfQ09VTlQKICAgICAgICBsaW1pdDogLTEKICAgICAgLSB0eXBlOiBNQVhfQVJUSUZBQ1RfUFJPUEVSVElFU19DT1VOVAogICAgICAgIGxpbWl0OiA1MAogICAgICAtIHR5cGU6IE1BWF9QUk9QRVJUWV9LRVlfU0laRV9CWVRFUwogICAgICAgIGxpbWl0OiAyNTYKICAgICAgLSB0eXBlOiBNQVhfUFJPUEVSVFlfVkFMVUVfU0laRV9CWVRFUwogICAgICAgIGxpbWl0OiAxMDI0CiAgICAgIC0gdHlwZTogTUFYX0FSVElGQUNUX0xBQkVMU19DT1VOVAogICAgICAgIGxpbWl0OiA1MAogICAgICAtIHR5cGU6IE1BWF9MQUJFTF9TSVpFX0JZVEVTCiAgICAgICAgbGltaXQ6IDI1NgogICAgICAtIHR5cGU6IE1BWF9BUlRJRkFDVF9OQU1FX0xFTkdUSF9DSEFSUwogICAgICAgIGxpbWl0OiAtMQogICAgICAtIHR5cGU6IE1BWF9BUlRJRkFDVF9ERVNDUklQVElPTl9MRU5HVEhfQ0hBUlMKICAgICAgICBsaW1pdDogLTEKICAgICAgLSB0eXBlOiBNQVhfUkVRVUVTVFNfUEVSX1NFQ09ORF9DT1VOVAogICAgICAgIGxpbWl0OiAxMDA=
  registry-deployments.yaml: ZGVwbG95bWVudHM6CiAgLSBuYW1lOiBkZXBsb3ltZW50LTEKICAgIHJlZ2lzdHJ5RGVwbG95bWVudFVybDogaHR0cDovL2xvY2FsaG9zdDo4MDgyCiAgICB0ZW5hbnRNYW5hZ2VyVXJsOiBodHRwOi8vdGVuYW50LW1hbmFnZXI6ODU4NQo=
---
apiVersion: v1
kind: Service
metadata:
  name: fleet-manager
spec:
  selector:
    app: fleet-manager
  type: LoadBalancer
  ports:
  - port: 8081
    targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: multitenant-sr-db-fleet
spec:
  serviceName: multitenant-sr-db-service-fleet
  selector:
    matchLabels:
      app: multitenant-sr-db-fleet
  replicas: 1
  template:
    metadata:
      labels:
        app: multitenant-sr-db-fleet
    spec:
      containers:
        - name: postgresql-db
          image: postgres:latest
          env:
            - name: POSTGRES_DB
              value: multitenantsrdb
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: PGDATA
              value: /data/pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: multitenant-sr-db-fleet
spec:
  selector:
    app: multitenant-sr-db-fleet
  type: LoadBalancer
  ports:
  - port: 5432
    targetPort: 5432
